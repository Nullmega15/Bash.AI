# install_windows.ps1 - Installation script for Bash.ai on Windows (PowerShell)

$ErrorActionPreference = "Stop" # Stop on errors

Write-Host "Starting Bash.ai installation for Windows..."

# --- 1. Verify Python Installation ---
Write-Host "Checking for Python installation..."
try {
    # Check if 'python' command is available and points to Python 3
    & python -c "import sys; exit(0 if sys.version_info.major >= 3 else 1)" 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "Python 3 not found or not in PATH. Please install Python 3 (e.g., from python.org) and ensure it's added to your PATH."
    }
    Write-Host "Python 3 found."
} catch {
    Write-Error $_.Exception.Message
    exit 1
}

# --- 2. Set Proper Paths ---
$repoDir = $PSScriptRoot # Directory where this script is located
$srcPath = Join-Path $repoDir "src\bashai.py"

# Verify source file exists
if (-not (Test-Path $srcPath)) {
    Write-Error "Source file not found at $srcPath. Please ensure 'src\bashai.py' exists."
    exit 1
}

# --- 3. Install Dependencies ---
Write-Host "Installing client dependencies from requirements.txt..."
try {
    python -m pip install -r (Join-Path $repoDir "requirements.txt")
    Write-Host "Client dependencies installed."
} catch {
    Write-Error "Failed to install client dependencies. Check your internet connection or pip setup."
    exit 1
}

# --- 4. Create Launcher in User's Local Bin (for PATH integration) ---
# This creates a small .cmd file that simply calls the python script
$launcherDir = Join-Path $env:USERPROFILE "AppData\Local\Microsoft\WindowsApps"
$launcherPath = Join-Path $launcherDir "bashai.cmd"

Write-Host "Creating launcher script at $launcherPath..."
# Ensure the directory exists
if (-not (Test-Path $launcherDir)) {
    New-Item -Path $launcherDir -ItemType Directory -Force | Out-Null
}

@"
@echo off
REM This script launches the Bash.ai client.
REM It's automatically generated by the Bash.ai installer.
python "$srcPath" %*
"@ | Out-File -Encoding ascii $launcherPath

# --- 5. Add to PATH if not already present ---
Write-Host "Checking/Adding launcher directory to user PATH..."
$path = [Environment]::GetEnvironmentVariable("Path", "User")
if (-not $path.Contains($launcherDir)) {
    [Environment]::SetEnvironmentVariable(
        "Path",
        $path + ";" + $launcherDir,
        "User"
    )
    Write-Host "Added '$launcherDir' to user PATH. You may need to restart your terminal for changes to take effect."
} else {
    Write-Host "Launcher directory already in user PATH."
}

Write-Host @"

âœ… Bash.ai installed successfully!
Usage:
  bashai [command]    - Execute single command (e.g., bashai list python files)
  bashai              - Enter interactive mode

To start the AI server, navigate to the bash.ai directory and run: .\start_server.bat
First-time setup for Bash.ai client: bashai --configure
"@

